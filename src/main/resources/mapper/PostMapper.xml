<?xml version= "1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace ="com.wants.market.core.mapper.PostMapper">

    <select id = "findPostById" resultType="com.wants.market.core.domain.Post">
            select * from post where id = #{id} and removed_at IS NULL
    </select>

    <select id = "findPostByAddress" resultType="com.wants.market.core.domain.Post">
        select p.*, ifnull(h.count, 0) count from post p LEFT OUTER JOIN (select post_id, count(*) count from heart group by post_id) h
        on p.id = h.post_id where address = #{address} and removed_at IS NULL
        order by id desc limit #{pageSize} offset #{offset}
    </select>

    <select id = "findPostByAddressAndCategory" resultType="com.wants.market.core.domain.Post">
        select p.*, ifnull(h.count, 0) count from post p LEFT OUTER JOIN (select post_id, count(*) count from heart group by post_id) h
        on p.id = h.post_id where address = #{address} and category = #{categoryId} and removed_at IS NULL
        order by id desc limit #{pageSize} offset #{offset}
    </select>


    <insert id = "insertPost" parameterType="com.wants.market.core.domain.Post"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
            insert into post (title, content,
                              category, address, trade_status,
                              created_at, updated_at, user_id, removed_at)
            values (#{title}, #{content},
                    #{category}, #{address}, #{tradeStatus},
                    #{createdAt}, #{updatedAt}, #{userId}, #{removedAt})
    </insert>

    <update id = "updatePost" parameterType="com.wants.market.core.domain.Post">
            update post set title = #{title},
                            content = #{content},
                            category = #{category},
                            trade_status = #{tradeStatus}
            where id = #{id}
    </update>

    <update id = "removedAtUpdate" parameterType="com.wants.market.core.domain.Post">
        update post
        set removed_at = #{removedAt}
        where id = #{id}
    </update>
    <delete id = "deletePost" parameterType="Long">
            delete from post where id = #{id}
    </delete>
</mapper>